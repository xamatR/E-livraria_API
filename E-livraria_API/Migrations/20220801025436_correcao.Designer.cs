// <auto-generated />
using System;
using E_livraria_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace E_livraria_API.Migrations
{
    [DbContext(typeof(E_livraria_APIContext))]
    [Migration("20220801025436_correcao")]
    partial class correcao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("E_livraria_API.Models.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("accType")
                        .HasColumnType("int");

                    b.Property<bool>("auth")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("E_livraria_API.Models.Editora", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("accType")
                        .HasColumnType("int");

                    b.Property<bool>("auth")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("id");

                    b.ToTable("Editoras");
                });

            modelBuilder.Entity("E_livraria_API.Models.ItemVenda", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("clienteid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("clienteid");

                    b.ToTable("ItemVendas");
                });

            modelBuilder.Entity("E_livraria_API.Models.Livro", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ItemVendaid")
                        .HasColumnType("int");

                    b.Property<string>("autor")
                        .HasColumnType("longtext");

                    b.Property<int?>("editoraid")
                        .HasColumnType("int");

                    b.Property<string>("genero")
                        .HasColumnType("longtext");

                    b.Property<string>("imageURL")
                        .HasColumnType("longtext");

                    b.Property<string>("livroURL")
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .HasColumnType("longtext");

                    b.Property<double>("preco")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.HasIndex("ItemVendaid");

                    b.HasIndex("editoraid");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("E_livraria_API.Models.Venda", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("dataCompra")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("itemVendaid")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<double>("valor")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.HasIndex("itemVendaid");

                    b.ToTable("vendas");
                });

            modelBuilder.Entity("E_livraria_API.Models.ItemVenda", b =>
                {
                    b.HasOne("E_livraria_API.Models.Cliente", "cliente")
                        .WithMany("itemVenda")
                        .HasForeignKey("clienteid");

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("E_livraria_API.Models.Livro", b =>
                {
                    b.HasOne("E_livraria_API.Models.ItemVenda", null)
                        .WithMany("livros")
                        .HasForeignKey("ItemVendaid");

                    b.HasOne("E_livraria_API.Models.Editora", "editora")
                        .WithMany("livros")
                        .HasForeignKey("editoraid");

                    b.Navigation("editora");
                });

            modelBuilder.Entity("E_livraria_API.Models.Venda", b =>
                {
                    b.HasOne("E_livraria_API.Models.ItemVenda", "itemVenda")
                        .WithMany()
                        .HasForeignKey("itemVendaid");

                    b.Navigation("itemVenda");
                });

            modelBuilder.Entity("E_livraria_API.Models.Cliente", b =>
                {
                    b.Navigation("itemVenda");
                });

            modelBuilder.Entity("E_livraria_API.Models.Editora", b =>
                {
                    b.Navigation("livros");
                });

            modelBuilder.Entity("E_livraria_API.Models.ItemVenda", b =>
                {
                    b.Navigation("livros");
                });
#pragma warning restore 612, 618
        }
    }
}
